version: 2.1

parameters:
  image-tag:
    type: string
    default: "0.1.0"

jobs:

  format-check:
    docker:
      - image: supraxelgames/cusco-buildimage:<<pipeline.parameters.image-tag>>
    resource_class: small
    steps:
      - checkout:
          name: Checkout Git repository
      - restore_cache:
          key: npm-{{ .Environment.CACHE_VERSION }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install NPM dependencies
          command: npm install
      - save_cache:
          key: npm-{{ .Environment.CACHE_VERSION }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Check formatting
          command: nx affected --configuration=production --target=format:check

  build:
    docker:
      - image: supraxelgames/cusco-buildimage:<<pipeline.parameters.image-tag>>
    resource_class: medium
    steps:
      - checkout:
          name: Checkout Git repository
      - restore_cache:
          key: npm-{{ .Environment.CACHE_VERSION }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install NPM dependencies
          command: npm install
      - save_cache:
          key: npm-{{ .Environment.CACHE_VERSION }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Build release configuration
          command: |-
            dotnet restore -f
            dotnet pack -c Release -p:VersionPrefix=$(node -p "require('./package.json').version").$CIRCLE_BUILD_NUM;SourceRevisionId=<<pipeline.git.revision>>;RepositoryUrl=<<pipeline.project.git_url>>;RepositoryType=git;RepositoryBranch=<<pipeline.git.branch>>;IncludeSymbols=true;SymbolPackageFormat=snupkg;PackageLicenseFile=./LICENSE

  tests:
    docker:
      - image: supraxelgames/cusco-buildimage:<<pipeline.parameters.image-tag>>
    resource_class: medium
    steps:
      - checkout:
          name: Checkout Git repository
      - restore_cache:
          key: npm-{{ .Environment.CACHE_VERSION }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install NPM dependencies
          command: npm install
      - save_cache:
          key: npm-{{ .Environment.CACHE_VERSION }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Run unit tests
          command: |
            dotnet restore -f
            dotnet build
            nx affected --target=test --no-build
  # ### see https://circleci.com/docs/2.0/collect-test-data#dot-net

  nuget:
    docker:
      - image: supraxelgames/cusco-buildimage:<<pipeline.parameters.image-tag>>
    resource_class: medium
    steps:
      - checkout:
          name: Checkout Git repository
      - run:
          name: Install NPM dependencies
          command: npm install
      - run:
          name: Restore C# dependencies
          command: dotnet restore -f
      - run:
          name: Build & Pack
          command: rm -rf nugets && dotnet pack -o nugets -c Release -p:VersionPrefix=$(node -p "require('./package.json').version").$CIRCLE_BUILD_NUM;SourceRevisionId=<<pipeline.git.revision>>;RepositoryUrl=<<pipeline.project.git_url>>;RepositoryType=git;RepositoryBranch=<<pipeline.git.branch>>;IncludeSymbols=true;SymbolPackageFormat=snupkg
      - run:
          command: for nuget in nugets/*.nupkg ; do dotnet nuget push $nuget -k $NUGET_KEY --source https://api.nuget.org/v3/index.json ; done

workflows:
  main:
    jobs:
      - tests
      - build:
          filters:
            branches:
              ignore:
                - main
      - nuget:
          requires:
            - tests
          filters:
            branches:
              only:
                - main
